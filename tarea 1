\documentclass[letterpaper,12pt]{article}

\usepackage[utf8]{inputenc}% Soporte para acentos. En Windows se puede usar latin1 o utf8, se recomienda utf8
\usepackage[spanish,mexico]{babel}% Español, división de sílabas
\usepackage[T1]{fontenc}

\usepackage{graphicx}
\usepackage{amssymb}		
\usepackage{fancyhdr}
\pagestyle{fancy}
\rhead{$C 1 \mathcal{E}(\eta)C 1 \alpha \int $}

\topmargin = -2cm
\oddsidemargin= 0cm
\textheight = 23cm
\textwidth = 17cm

\begin{document}
\setlength{\unitlength}{1 cm} %Especificar unidad de trabajo
\thispagestyle{empty}
\begin{picture}(18,4)
	\put(0,0){\includegraphics[width=3cm,height=4cm]{unam.jpg}}
	\put(11.5,0){\includegraphics[width=4cm,height=4cm]{ciencias.png}}
\end{picture}
\\
\\
\begin{center}
	\textbf{{\Huge Universidad Nacional Autónoma de México}\\[2.5cm]
	{\LARGE Facultad de Ciencias}\\[3.25cm]
	{\Large Lenguajes de programación}\\[2.3cm]
	{\large Alumnos:\\Guerrero Chávez Diana Lucía\\
	        Lázaro Arias Jorge Alberto\\
	        Sánchez Alcántara Jesús Esteban}}\\[2cm]
\end{center}

\newpage

\section{Problema I}
\textbf{Hemos visto en clase que la definición de sustitución resulta en una operación ineficiente: en el peor caso es de orden cuadrático en relación al tamaño del programa (considerando el tamaño del programa como el número de nodos en el árbol de sintaxis abstracta). También se vio la alternativa de diferir la sustitución por medio ambientes.Sin embargo, implementar un ambiente usando un stack no parece ser mucho mas eficiente.\\
Responde las siguientes preguntas.}

\begin{itemize}
	\item \textbf{Provee un esquema para un programa que ilustre la no-linealidad de la implementación de ambientes basada en un stack. Explica brevemente porque su ejecución en tiempo no es lineal con respecto al tamaño de su entrada.}
	\begin{verbatim}
	(interp {with {x 2}
	{with {f {fun (y)(+ y x)}} 
		{f 3} }})
	\end{verbatim}
	
Se trata de una función que hace la suma 2+3. La función 'interp' en algún momento llamará a 'subst'. Para poder verlo mejor se hacen los siguientes ambientes:\\
mtsub = ambiente vacío\\
env1 = (x 2)+ mtsub \\
env2 = (f fun) + env1 \\
env3 = ((y 3) (x 2))\\

En cada uno de ellos se ejecutó 'subst' y como cada ambiente contiene al ambiente anterior, la ejecución en uno implica la ejecución en todos los anteriores, por lo que la complejidad se vuelve cuadrática.

	\item \textbf{Describe una estructura de datos para un ambiente que un interprete de FWAE pueda usar para mejorar su complejidad}\\
	Lo que podemos hacer es usar una tabla hash, para mejorar la complejidad de 'subst'.
	\item \textbf{Muestra como usaría el interpreté esta nueva estructura de datos.}\\
	El interprete puede recibir un identificador de cero a n (que puede ser el equivalente al número de ambiente) que usará para la función hash (La función hash ya debe considerar el caso de las colisiones).
	\item \textbf{Indica cual es la nueva complejidad del interprete (análisis del peor caso) y de forma informal pero rigurosa pruébalo.}\\
	La complejidad de las funciones hash que implemente el intérprete son de orden lineal O(n), a diferencia de usar ambientes, en donde la complejidad es de O($n^{2}$).\\
Las búsquedas de un valor para un identificador que realizaría 'subst' usando una tabla hash, se harían aplicando la función hash a un identificador (que solo servirá para enumerar de 0 a n los "bloques" de la tabla hash) que comience siempre desde cero junto con el identificador (que 'subst' se encargará de buscar) y el valor de ese identificador o la referencia a otro bloque de la tabla hash.
\end{itemize}


\section{Problema II}
\textbf{Dada la siguiente expresión de FWAE:}
\begin{verbatim}
{with {x 4}
    {with {f {fun {y} {+x y}}}
        {with {x 5}
            {f 10}}}}
\end{verbatim}


\textbf{debe evaluar a (\textit{num} 14) usando alcance estático, mientras que usando alcance dinámico se obtendría (\textit{num} 15). Ahora Ben un agudo pero excéntrico estudiante dice que podemos seguir usando alcance dinámico mientras tomemos el valor mas viejo de x en el ambiente en vez del nuevo y para este ejemplo el tiene razón.}\\

\begin{itemize}
	\item  \textbf{¿Lo que dice Ben esta bien en general? si es el caso justifícalo.}\\
	No, ya que el alcance dinámico regresa el último valor que entró en el stack. Si tomamos como dice Ben el valor más viejo de x en el ambiente, este queda opacado por los nuevos valores de x que van entrando al stack.
	
	\item \textbf{Si Ben esta equivocado entonces da un programa de contraejemplo y explica por que la estrategia de evaluación de Ben podría producir una respuesta incorrecta.}
\end{itemize}
	
Tenemos la siguiente expresión:
\begin{verbatim}
{with {x 4}
    {with {f {fun {y} {+x y}}}
        {with {x 5}
            {f 10}}}}
\end{verbatim}
					
El stack es:
\begin{table}[h!]
\centering
\begin{tabular}{|c|}
y $\rightarrow$ 10 \\ \hline
x $\rightarrow$ 5 \\ \hline
(f(fun(y)(+x y))) \\ \hline
x $\rightarrow$ 7 \\ \hline
x $\rightarrow$ 4 \\ \hline
\end{tabular}	
\end{table}

Entonces, evaluando con alcance dinámico:
\begin{verbatim}
>(F 10)
 (F(fun(y))(+x y))10)
 =(+x 10)
\end{verbatim}
=(+5 10)=15 $\rightarrow$ resultado de alcance dinámico\\
(+4 10)=14 $\rightarrow$ resultado de tomar el valor más viejo de x en el stack

\section{Problema III}
\textbf{Dada la siguiente expresión de FWAE con with multi-parametrico:}
\begin{verbatim}
{with {{x 5} {adder {fun {x} {fun {y} {+x y}}}} {z 3}}
                        {with {{y 10} {add5 {adder x}}}
                            {add5 {with {{x {+10 z}} {y {add5 0}}}
                                    {+ {+y x} z}}}}}
\end{verbatim}

\begin{itemize}
	\item \textbf{Da la forma Bruijn de la expresión anterior.}
\begin{verbatim}
	{with 5{adder {fun {fun { } {+ <:0 0> <:0 0>}}}}
											{ }}}
				{with 10 {add5 {adder <:1 0>}}}
					{add5 {with {{<:2 0> {+10 <:1 0>}} {<:1 0>{add5 0}}}
							{+ {+ <:0 1> <:0 0>} <:2 0>}}}}}	
\end{verbatim}
	
	\item \textbf{Realiza la corrida de esta expresión, es decir escribe explícitamente cada una de las llamadas tanto para subst y interp, escribiendo además los resultados parciales en sintaxis concreta.}\\
\end{itemize}

\end{document}


